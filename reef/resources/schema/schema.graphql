type Query {
    getAllStorefronts: [Storefront!]
    getAllStorefrontsInMyArea(zipCode: Int) : [Storefront!]
    getStorefrontMenu(storeFrontId: ID!) : Menu
}

type Mutation {
    createCustomerOrder(customerOrder: Order!) :Int!
}

type Storefront {
    id: ID!
    name: String
    zipCode: Int!
    address: String!
    imageUrl: String
    menu: Menu
    orders: [Order!]
}

type Menu {
    storefrontId: ID!
    items: [MenuItem]
}
type MenuItem {
    item: String!
    priceInCents: Int!
}

type Customer {
    id: ID!
    name: String!
    address: String!
}

type Order {
    id: ID!
    customer: Customer!
    coupons: [Coupon!]
    storefront: Storefront!
}

input OrderInput {
    customerId: Int!
    couponIds: [Int!]
    storeFrontId: Int
}

type Coupon{
    id: ID! 
    type: CoupounType!
    value: Int! 
}

enum CoupounType {
    FLAT_SUM, 
    PERCENTAGE_BASED
}